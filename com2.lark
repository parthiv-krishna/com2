%import common.WS
%import common.SH_COMMENT
%ignore WS
%ignore SH_COMMENT

start: section+

// identifiers
ID: /[a-z_][a-z0-9_]*/i

// types
array_dim : "[" [INT] "]"
type : ID array_dim*

// expressions
INT: /[0-9]+/
ARITH_OP : "+" | "-" | "*" | "/"
expr : ID | INT | "(" expr ")" | expr ARITH_OP expr | expr "[" expr "]"


// sections
?section: parameters | variables | states | functions
parameters: "parameters" "{"  (param_declaration ";")* "}"
variables: "variables" "{" (var_declaration ";")* "}"
states: "states" "{" state* "}"
functions: "functions" "{" function* "}"

param_declaration : type ID ["=" expr]
var_declaration : type ID


TIME_UNIT.1 : "s" | "ms" | "us" | "ns"
duration : expr TIME_UNIT
state : [ID ":"] "(" [duration] ")" "{" state_actions "}" [transitions]
state_actions : (state_action ";")*
?state_action : wire_state | variable_assignment
WIRE_OP : "->" | "<-" | "==>" | "<=="
wire_state : expr WIRE_OP expr
variable_assignment : ID "=" expr

transitions :  "[" cond_arm ("," cond_arm)* "]"
cond_arm : [expr] "=>" ID

function: "fn" ID "(" (param ("," param)*)? ")" "{" (stmt ";")* "}"
param: ID ":" IO_TYPE type
IO_TYPE: "input" | "output"
state_path : ID "..." ID
?stmt: variable_assignment | state_path
