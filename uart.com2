parameters {
    wire tx;
    integer baud;
    integer bit_period = 1000000/baud;
    integer stop_bits = 1;
}

variables {
    byte data;
}

states {
    IDLE: (tx){
        tx --> 1;
    }

    START: (bit_period us){
        tx --> 0;   
    }

    for $i from 0 to 7 {
        (bit_period us){
            tx ==> data[$i];
        }        
    }

    STOP: (bit_period * stop_bits us){
        tx --> 1;
    }[=> IDLE]

}

shared {
    fn uart_init() {
        ...IDLE;
    }
}

left {
    fn uart_send(output byte x) {
        data = x;
        START...IDLE;
    }
}

right {
    fn uart_recv(input byte x) {
        IDLE...IDLE;
        x = data;
    }
}